@model SQEstimationAndBillingSystem.Models.LeadChargesModel
@{
    ViewBag.Title = "Add/Edit Lead Charges";
}

<section class="content-header">
    <h1>
        Add/Edit Lead Charges
    </h1>
</section>
<div class="row">
    <div class="col-xs-12" style="text-align:right; margin:5px">
        <input type="button" style="margin-right:21px; width:64px;" value="Back" onclick="BackToIndex()" />
    </div>

</div>
@using (Ajax.BeginForm("AddEditLeadCharges", "LeadCharges", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "OnLeadChargesSuccess",
    OnFailure = "OnLeadChargesFailure"
}, new { @id = "frmLeadCharges" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="panel panel-default">
        <div class="panel-body text-right">
            @Html.HiddenFor(model => model.id)
            @Html.HiddenFor(model => model.ProjectName)
            @Html.HiddenFor(model => model.ProjectId)
            @Html.HiddenFor(model => model.DSRId)
            @Html.Hidden("hdnSubmitValue")
            <div class="form-group row">
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.Material, new { htmlAttributes = new { @class = "form-control", @style = "text-align:left" } })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.Material, new { @class = "form-control", @maxlength = "50", @style = "text-align:left" })
                    @Html.ValidationMessageFor(model => model.Material,"", new { @class = "text-danger", @style = "float:left" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control", @style = "text-align:left" } })
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "text-align:left" } })
                    @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" , @style = "float:left"})
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.LeadInKm, new { htmlAttributes = new { @class = "form-control", @style = "text-align:left" } })
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.LeadInKm, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "text-align:left" } })
                    @Html.ValidationMessageFor(model => model.LeadInKm, "", new { @class = "text-danger", @style = "float:left" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.TotalLeadChargesAtQuarry, new { htmlAttributes = new { @class = "form-control", @style = "text-align:left" } })
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.TotalLeadChargesAtQuarry, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "text-align:left" } })
                    @Html.ValidationMessageFor(model => model.TotalLeadChargesAtQuarry, "", new { @class = "text-danger", @style = "float:left" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.NetLeadChargesForCompletedCol, new { htmlAttributes = new { @class = "form-control", @style = "text-align:left" } })
                </div>
                <div class="col-sm-3">
                    @Html.EditorFor(model => model.NetLeadChargesForCompletedCol, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @style = "text-align:left" } })
                    @Html.ValidationMessageFor(model => model.NetLeadChargesForCompletedCol, "", new { @class = "text-danger", @style = "float:left" })
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-12" style="text-align:right">
                <input type="submit" value="Submit" style="margin-right: 15px;" class="btnbtn-default mybtn" onclick="OnSubmitClick(1)">
                <input type="submit" value="Submit And Add New" style="margin-right: 15px;" class="btnbtn-default mybtn" onclick="OnSubmitClick(2)">
                <input type="button" style="margin-right:21px; width:64px;" value="Cancel" onclick="BackToIndex()" />
            </div>
        </div>
    </div>

}
@section Scripts{
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")
    @Scripts.Render("~/bundles/jqueryval")

}
<script>
    function OnSubmitClick(data) {
        $("#hdnSubmitValue").val(data);
    }

    function BackToIndex() {
        bootbox.confirm({
            title: "Confirmation",
            message: "Your changes will be discarded! Are you sure?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: ' mybtn bootboxbutton'
                },
                cancel: {
                    label: 'No',
                    className: ' cancelbtn bootboxbutton'
                }
            },
            callback: function (confirmation) {
                if (confirmation) {
                    document.location.href = "/LeadCharges/Index";
                }
            }
        })
    }

    function OnLeadChargesSuccess(data) {
        if (data == "success") {
            //document.location.href = "/LeadCharges/Index";
            toastr.success("Lead Charges submitted successfully!");
            if ($("#hdnSubmitValue").val() == "1") {
                setTimeout(
                    function () {
                        window.location.href = "/LeadCharges/Index";
                    }
                    , 2000);
            } else {
                Clear();
            }
        } else {
            toastr.error("Error occurred!");
        }
    }

    function Clear() {
        $('#frmLeadCharges')[0].reset();
    }

    function OnLeadChargesFailure(data) {
        //toastr.error("Error occurred!");
    }
</script>

