@*@{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <link href="~/Content/slick.grid.css" rel="stylesheet" />
    <link href="~/Content/jquery-ui-1.12.1/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/slick.pager.css" rel="stylesheet" />
    <style>
        .cell-title {
            font-weight: bold;
        }

        .cell-effort-driven {
            text-align: center;
        }

        .cell-selection {
            border-right-color: silver;
            border-right-style: solid;
            background: #f5f5f5;
            color: gray;
            text-align: right;
            font-size: 10px;
        }
    </style>

    <section class="content-header">
        <h1>
            DSR
            <small>List</small>
        </h1>
    </section>
    <div class="row">
        <div class="col-xs-12" style="text-align:right; margin:5px">
            <input type="button" value="Upload New DSR" onclick="AddNew()" />
        </div>

    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body" id="divDSR">
                    <div id="DSRgrid" style="width:100%;height:400px;"></div>
                    <div id="pager" style="width:100%;height:20px;"></div>
                </div>
            </div>
        </div>
    </div>*@



@*<script src="~/Scripts/jquery-ui-1.12.1/jquery-ui.min.js"></script>
    <script src="~/Scripts/jquery.event.drag.js"></script>

    <script src="~/Scripts/SlickGrid/slick.core.js"></script>
    <script src="~/Scripts/SlickGrid/slick.formatters.js"></script>
    <script src="~/Scripts/SlickGrid/slick.grid.js"></script>
    <script src="~/Scripts/SlickGrid/slick.dataview.js"></script>
    <script src="~/Scripts/SlickGrid/Controls/slick.pager.js"></script>*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/select/1.3.1/js/dataTables.select.min.js"></script>*@
@using (Html.BeginForm("AddEditDSRDetails", "DSR", FormMethod.Post, new { id = "frmChild" }))
{
    <input type="hidden" id="id" name="id" value="0">
    <input type="hidden" id="DSRDetailsId" name="DSRDetailsId" value="0">
    <div class="panel panel-default" style="padding-left: 1%">
        <div style="color: #286090;padding-left: 0.3%;">
            <h4> <strong>Add New DSR</strong> </h4>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-3">
                    <label class="control-label">Chapter</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtChapter" name="Chapter" maxlength="20" class="form-control" />
                </div>
                @*<div class="col-lg-3">
                        <label class="control-label">Sub Material</label>
                        <span style="color:red"></span>
                        <select class="form-control" id="ddlSubMaterial" style="padding: 0; padding-left:2px"></select>
                    </div>*@
                <div class="col-lg-3">
                    <label class="control-label">SSR Item No</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtSSRItemNo" name="SSRItemNo" class="form-control" />
                </div>
                <div class="col-lg-3">
                    <label class="control-label">Description Of The Item</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtDescriptionOfTheItem" name="DescriptionOfTheItem" class="form-control" onblur="GetLeadInKMData()" />
                </div>
                <div class="col-lg-3">
                    <label class="control-label">Additional Specification</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtAdditionalSpecification" name="AdditionalSpecification" class="form-control" />
                </div>
            </div>
            <div class="row">

                <div class="col-lg-3">
                    <label class="control-label">Unit</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtUnit" name="Unit" class="form-control" />
                </div>
                <div class="col-lg-3">
                    <label class="control-label">Completed Rate Excluding GST In Rs</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtCompletedRateExcludingGSTInRs" name="CompletedRateExcludingGSTInRs" class="form-control" />
                </div>
                <div class="col-lg-3">
                    <label class="control-label">Labour Rate Excluding GST In Rs</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtLabourRateExcludingGSTInRs" name="LabourRateExcludingGSTInRs" class="form-control" />
                </div>
                <div class="col-lg-3">
                    <label class="control-label">Reference No</label>
                    <span style="color:red">*</span>
                    <input type="text" id="txtReferenceNo" name="ReferenceNo" class="form-control" />
                </div>

            </div>
            <div class="row">

                <div class="col-lg-3">

                </div>
                <div class="col-lg-3">

                </div>
                <div class="col-lg-3">

                </div>
                <div class="col-lg-2">
                    <label class="control-label" style="color: transparent;"> Submit</label>
                    <span style="color:transparent">*</span>
                    <input type="button" value="Upload New DSR" class="form-control btn btn-default mybtn" onclick="AddNew()" />
                </div>
                <div class="col-lg-1" style="float: right !important;">
                    <label class="control-label" style="color: transparent;"> Submit</label>
                    <span style="color:transparent">*</span>
                    <input type="submit" value="Submit" class="form-control btn btn-default mybtn" onclick="return ValidateFields()">
                </div>
            </div>
        </div>
    </div>
}
<div class="panel panel-default" style="padding-left: 1%">
    <div class="card">
        <div class="card-body" style="padding:0.25em !important;">
            <!-- style="padding:0.25em !important;" -->
            <div id="tableDiv" class="dt-bootstrap4 table-responsive">
                <table id="tblDSRDetails" class="table table-striped table-bordered" style="width:100% !important;" data-request-url="@Url.Action("GetAllDSRDetails", "DSR")">
                    <thead class="thead-light" style="border-top-left-radius: 15px;border-top-right-radius: 15px !important;background-color: #e9ecef !important;">
                        <tr style="line-height:15px;" class="font-weight-bold">
                            <th class="no-sort">Action</th>
                            <th class="no-sort">Sr No</th>
                            <th class="no-sort">Chapter</th>
                            <th class="no-sort">SSR Item No</th>
                            <th class="no-sort">Description Of The Item</th>
                            <th class="no-sort">Additional Specification</th>
                            <th class="no-sort">Unit</th>
                            <th class="no-sort">Completed Rate Excluding GST In Rs</th>
                            <th class="no-sort">Labour Rate Excluding GST In Rs</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        LoadGridData();
    });

    function AddNew() {

           $.ajax({
                        type: 'GET',
                        url: '@Url.Action("CheckDSRExists", "DSR")',
                        success: function (response) {

                            if (response == "false") {
                                toastr.info("DSR uploading... Please wait....");
                                  $.ajax({
                        type: 'GET',
                        url: '@Url.Action("UploadDSR", "DSR")',
                        success: function (response) {
                           toastr.success("DSR uploaded successfully.");
                            window.location.reload();
                        }
                    });
                            }
                            else {
                               
                           

         bootbox.confirm({
                message: "DSR already present. Are you sure you want to upload again? If yes, DSR dependent all projects and details will be deleted.",
                buttons: {
                    confirm: {
                        label: "Yes",
                        className: 'btn-success'
                    },
                    cancel: {
                        label: "No",
                        className: 'btn-danger'
                    }
                }, callback: function (result) {
                    
                    if (!result)
                        return;

                    toastr.info("DSR uploading... Please wait....");
                               $.ajax({
                        type: 'GET',
                        url: '@Url.Action("UploadDSR", "DSR")',
                        success: function (response) {
                           toastr.success("DSR uploaded successfully.");
                            window.location.reload();
                        }
                    });
                }

                                });

                   }


               }
           });

      //  ----
        

        //-----
    }

    function LoadGridData() {
        @*$.ajax({
            type: 'GET',
            url: '@Url.Action("GetAllDSRDetails", "DSR")',
            success: function (response) {
                
                //alert(JSON.stringify(response));
                //alert(JSON.parse(response));
                //console.log(JSON.stringify(response));
                var dataView;
                var grid;
                var data = [];
                var columns = [
                    //{ id: "PropertyID", name: "Property ID", field: "PropertyID", height: 55 },
                    //{ id: "sel", name: "SN", height: 25, field: "num", behavior: "select", cssClass: "cell-selection", width: 40, resizable: false, selectable: false },
                    //{ id: "id", name: "id", field: "id", cssClass: "cell-title", resizable: false, minWidth: 100, sortable: true },
                    { id: "SrNo", name: "SrNo", field: "SrNo", resizable: false, minWidth: 150, sortable: true },
                    { id: "Chapter", name: "Chapter", field: "Chapter", resizable: false, minWidth: 150, sortable: true },
                    { id: "SSRItemNo", name: "SSRItemNo", field: "SSRItemNo", resizable: false, minWidth: 120, sortable: true },
                    { id: "DescriptionOfTheItem", name: "DescriptionOfTheItem", field: "DescriptionOfTheItem", resizable: false, minWidth: 120, sortable: true },
                    { id: "AdditionalSpecification", name: "AdditionalSpecification", field: "AdditionalSpecification", resizable: false, minWidth: 100, sortable: true },
                    { id: "Unit", name: "Unit", field: "Unit", resizable: false, minWidth: 120, sortable: true },
                    { id: "CompletedRateExcludingGSTInRs", name: "CompletedRateExcludingGSTInRs", field: "CompletedRateExcludingGSTInRs", resizable: false, minWidth: 120, sortable: true },
                    { id: "LabourRateExcludingGSTInRs", name: "LabourRateExcludingGSTInRs", field: "LabourRateExcludingGSTInRs", resizable: false, minWidth: 120, sortable: true },

                    //{ id: "effort-driven", name: "Effort Driven", width: 80, minWidth: 20, maxWidth: 80, cssClass: "cell-effort-driven", field: "effortDriven", formatter: Slick.Formatters.Checkmark }
                ];
                var options = {
                    editable: false,
                    enableAddRow: false,
                    enableCellNavigation: true,
                    multiColumnSort: true
                };
                var percentCompleteThreshold = 0;
                var prevPercentCompleteThreshold = 0;
                var h_runfilters = null;

                /*function myFilter(item, args) {
                    return item["percentComplete"] >= args;
                }

                function DataItem(i) {
                    this.num = i;
                    this.id = "id_" + i;
                    this.percentComplete = Math.round(Math.random() * 100);
                    this.effortDriven = (i % 5 == 0);
                    this.start = "01/01/2009";
                    this.finish = "01/05/2009";
                    this.title = "Task " + i;
                    this.duration = "5 days";
                }

                function DataItem(i) {
                    this.Mobile = "9812450025";
                    this.id = "id_" + i;
                    this.PropertyID = "P_001";
                    this.PropertyNo = 100;
                    this.OwnerName = "HARSHAL";
                    this.Description = "TEST";
                    //this.title = "Task " + i;
                    //this.duration = "5 days";
                }*/

                $(function () {
                    //prepare the data
                    ////for (var i = 0; i < 500000; i++) {
                    ////    data[i] = new DataItem(i);
                    ////}

                    dataView = new Slick.Data.DataView({ inlineFilters: true });
                    grid = new Slick.Grid("#DSRgrid", dataView, columns, options);
                    var pager = new Slick.Controls.Pager(dataView, grid, $("#pager"));
                    // wire up model events to drive the grid
                    dataView.onRowCountChanged.subscribe(function (e, args) {
                        grid.updateRowCount();
                        grid.render();
                    });
                    dataView.onRowsChanged.subscribe(function (e, args) {
                        grid.invalidateRows(args.rows);
                        grid.render();
                    });
                    // wire up the slider to apply the filter to the model
                    $("#pcSlider").slider({
                        "range": "min",
                        "slide": function (event, ui) {
                            if (percentCompleteThreshold != ui.value) {
                                window.clearTimeout(h_runfilters);
                                h_runfilters = window.setTimeout(filterAndUpdate, 10);
                                percentCompleteThreshold = ui.value;
                            }
                        }
                    });
                    function filterAndUpdate() {
                        var isNarrowing = percentCompleteThreshold > prevPercentCompleteThreshold;
                        var isExpanding = percentCompleteThreshold < prevPercentCompleteThreshold;
                        var renderedRange = grid.getRenderedRange();
                        dataView.setFilterArgs(percentCompleteThreshold);
                        dataView.setRefreshHints({
                            ignoreDiffsBefore: renderedRange.top,
                            ignoreDiffsAfter: renderedRange.bottom + 1,
                            isFilterNarrowing: isNarrowing,
                            isFilterExpanding: isExpanding
                        });
                        dataView.refresh();
                        prevPercentCompleteThreshold = percentCompleteThreshold;
                    }
                    // initialize the model after all the events have been hooked up
                    dataView.beginUpdate();
                    //dataView.setItems(data);
                    //dataView.setItems(JSON.stringify(response));
                    dataView.setItems(response);
                    //dataView.setFilter(myFilter);
                    //dataView.setFilterArgs(0);
                    dataView.endUpdate();
                })
            },
            error: function (result) {
                toastr.error("ajaxError");
            }
        });*@

        var indexurl = $('#tblDSRDetails').data("request-url");
        //indexurl = indexurl + "?FromDate=" + $('#min-date').val() + "&&ToDate=" + $('#max-date').val();
        var whInTable = $('#tblDSRDetails').dataTable({
            "paging": true,
           // "select": true,
            "language": {
                "sLengthMenu": "Records Per Page _MENU_",
                "search": '',//'<i class="fa fa-search"></i>',
                "searchPlaceholder": "Search",
                "oPaginate": {
                    "sNext": '<i class="fa fa-angle-right"></i>',
                    "sPrevious": '<i class="fa fa-angle-left"></i>',
                }
            },
            // dom: '<"floatRight"B><"clear">frtip',

            //dom: "lfBtrR",
           // dom: "lftrR",
            //buttons: [
            //    {
            //        extend: 'excel',
            //        title: 'WIP Report ' + 'From Date: ' + $('#min-date').val() + ' To Date: ' + $('#max-date').val(),
            //        filename: 'WIP Report: ' + 'From Date: ' + $('#min-date').val() + ' To Date: ' + $('#max-date').val(),
            //        messageTop: 'The information in this table is copyright to Sirius Cybernetics Corp.'
            //    },

            //    {
            //        extend: 'pdfHtml5',
            //        title: 'WIP Report: ' + 'From Date: ' + $('#min-date').val() + ' To Date: ' + $('#max-date').val(),
            //        customize: function (doc) {
            //            doc.content.splice(0, 0, {
            //                text: ""
            //            });

            //        }
            //    },
            //    'print'
            //    //'excelHtml5',
            //    //'csvHtml5',
            //    //'pdfHtml5'
            //],
            'fnDrawCallback': function (oSettings) {
                $('.dataTables_filter').each(function () {
                    //if ($("#min-date").length == 0) {
                    //    $(this).append('<span style="padding-left:10px">From Date: </span><input type="text" id="min-date" name="min-date" class="form-control date-range-filter" data-date-format="yyyy-mm-dd" placeholder="From:"/><span style="padding-left:10px">To Date: </span><input type="text" id="max-date" name="max-date" class="form-control date-range-filter" data-date-format="yyyy-mm-dd" placeholder="To:">');

                    //}
                    // var table = $('#example').DataTable();

                });
            },
            "autoWidth": false,
            "bServerSide": false,
            "bSortable": true,
            "bSearchable": true,
            "bRetrieve": false,
            "bDestroy": true,
            "bFilter": true,
            "searching": true,
            "bProcessing": false,
            "sAjaxSource": indexurl,
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "more_data", }); //"value": searchForm
            },
            "aaSorting": [],
            "columnDefs": [{
                "targets": 'no-sort',
                "orderable": false,
            }],
            "aoColumns": [
                {
                    "title": "Action", "autoWidth": true, "orderable": false, "className": "no-sort text-right batch-no",
                    "render": function (data, type, row, meta) {
                        if (row.IsNonDSRItem == true) {
                            editaction = '<a href="#" title="Edit" class="links data-edit-btn" onclick="return AddEditDSRDetails(' +
                                row.id +
                                ')">' +
                                "<img src='" + '@Url.Content("~/Content/Images/Edit.svg")' + "'></img>" +
                                "</a> ";



                            deleteaction = '<a href="#" title="Delete" class="links data-edit-btn" onclick="return DeleteDSRDetails(' +
                                row.id +
                                ')">' +
                                "<img src='" + '@Url.Content("~/Content/Images/delete.svg")' + "'></img>";
                            return '<div class="row"> <div class="col-lg-3">' + editaction + '</div>' + '<div class="col-lg-3">' + deleteaction + '</div></div>';
                        }

                        return "";
                    },
                },
                {
                    "title": "Sr No", "autoWidth": true, "orderable": false, "className": "no-sort text-right batch-no",
                    "render": function (data, type, row, meta) {
                        a = meta.row + 1
                        return a;
                    },
                },
                { "title": "Chapter", "autoWidth": true, "orderable": false, "className": "no-sort text-left", "data": "Chapter" },
                { "title": "SSR Item No", "autoWidth": true, "orderable": false, "className": "no-sort text-left", "data": "SSRItemNo" },
                { "title": "Description Of The Item", "autoWidth": true, "orderable": false, "className": "no-sort text-left", "data": "DescriptionOfTheItem" },
                { "title": "Additional Specification", "autoWidth": true, "orderable": false, "className": "no-sort text-left", "data": "AdditionalSpecification" },
                { "title": "Unit", "autoWidth": true, "orderable": false, "className": "no-sort text-left", "data": "Unit" },
                { "title": "Completed Rate Excluding GST In Rs", "autoWidth": true, "orderable": false, "className": "no-sort text-left", "data": "CompletedRateExcludingGSTInRs" },
                { "title": "Labour Rate Excluding GST In Rs", "autoWidth": true, "orderable": false, "className": "no-sort text-left", "data": "LabourRateExcludingGSTInRs" }

            ]
        });
        

        whInTable.fnDraw();

    }

    function ValidateFields() {
        if ($("#txtChapter").val() == "" ||
            $("#txtSSRItemNo").val() == "" ||
            $("#txtDescriptionOfTheItem").val() == "" ||
            $("#txtAdditionalSpecification").val() == "" ||
            $("#txtCompletedRateExcludingGSTInRs").val() == "" ||
            $("#txtLabourRateExcludingGSTInRs").val() == "" ||
            $("#txtUnit").val() == "") {
            toastr.error("Please enter mandatory fields(*).");
            return false;
        }
        return true;
    }

    function AddEditDSRDetails(id) {

        $.ajax({
                type: 'GET',
            url: '@Url.Action("CreateEdit", "DSR")',
            data: { id: id },
            success: function (response) {

                $("#txtChapter").val(response.Chapter);
                $("#txtSSRItemNo").val(response.SSRItemNo);
                $("#txtDescriptionOfTheItem").val(response.DescriptionOfTheItem);
                $("#txtAdditionalSpecification").val(response.AdditionalSpecification);
                $("#txtCompletedRateExcludingGSTInRs").val(response.CompletedRateExcludingGSTInRs);
                $("#txtLabourRateExcludingGSTInRs").val(response.LabourRateExcludingGSTInRs);
                $("#txtUnit").val(response.Unit);
                $("#id").val(response.id);

                    },
                error: function (result) {
                    toastr.error("Something went wrong. Please contact administrator.");
                }
            });

    }
    function DeleteDSRDetails(id) {
        bootbox.confirm({
                message: "Are you sure?",
                buttons: {
                    confirm: {
                        label: "Yes",
                        className: 'btn-success'
                    },
                    cancel: {
                        label: "No",
                        className: 'btn-danger'
                    }
                }, callback: function (result) {
                    
                    if (!result)
                        return;
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteDSRDetails", "DSR")',
                        data: { id: id },
                        success: function (response) {
                            
                            if (response == "success") {
                                toastr.success("DSR deleted Successfully.");
                                LoadGridData();
                              }
                            else {
                                toastr.error("Something went wrong. Please contact administrator.")
                                return;
                            }


                        },
                        error: function (result) {
                            toastr.error("Something went wrong. Please contact administrator.");
                        }
                    });
                }

            });
    }



</script>
<style>
    div.slick-header {
        height: 30px;
    }

    div.slick-header-column {
        height: 100% !important;
    }

    span.slick-pager-nav {
        padding: 0px !important;
    }

    span.slick-pager-settings {
        padding: 0px !important;
    }

    #DSRgrid {
        font-size: small !important;
    }
</style>