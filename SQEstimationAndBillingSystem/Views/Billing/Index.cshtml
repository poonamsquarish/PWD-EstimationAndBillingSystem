
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/slick.grid.css" rel="stylesheet" />
<link href="~/Content/jquery-ui-1.12.1/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/slick.pager.css" rel="stylesheet" />
<style>
    .cell-title {
        font-weight: bold;
    }

    .cell-effort-driven {
        text-align: center;
    }

    .cell-selection {
        border-right-color: silver;
        border-right-style: solid;
        background: #f5f5f5;
        color: gray;
        text-align: right;
        font-size: 10px;
    }
</style>

<section class="content-header">
    <h1>
        Billing
        <small>List</small>
    </h1>
</section>
<div class="row">
    <div class="col-xs-12" style="text-align:right; margin:5px">
        <input type="button" value="New Billing" onclick="AddNew()" />
    </div>

</div>
<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-body" id="divBilling">
                <div id="BillingGrid" style="width:100%;height:400px;"></div>
                <div id="pager" style="width:100%;height:20px;"></div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="DSRModal" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true" data-backdrop="static" data-keyboard="true">
    <div class="modal-dialog modal-dialog-centered" style="width:1000px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h5 class="modal-title" id="modalTitleID"></h5>
            </div>
            <div id="divUserModelBody" class="modal-body">
                <div class="box-body">
                    <div class="col-lg-12 " style="padding-right:0px">
                        <div>
                            <div class="panel panel-default" style="padding-left: 1%">
                                <div style="color: #286090;padding-left: 0.3%;">
                                    <h4> <strong> User Details</strong> </h4>
                                </div>
                                <div class="panel-body">

                                </div>
                            </div>

                            <div style="text-align: right" class="btn-div-center">
                                <button type="button" id="btnEmployeeSave" parentDeptid="0" class="btn btn-primary" onclick="AddEditButtonClick()">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-ui-1.12.1/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery.event.drag.js"></script>

<script src="~/Scripts/SlickGrid/slick.core.js"></script>
<script src="~/Scripts/SlickGrid/slick.formatters.js"></script>
<script src="~/Scripts/SlickGrid/slick.grid.js"></script>
<script src="~/Scripts/SlickGrid/slick.dataview.js"></script>
<script src="~/Scripts/SlickGrid/Controls/slick.pager.js"></script>

<script>

    $(document).ready(function () {
        LoadGridData();
    });

    function AddNew() {
        document.location.href = "/Billing/CreateEdit";
    }

    function LoadGridData() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetAllRecaptional", "RecaptionalSheet")',
            success: function (response) {
                var dataView;
                var grid;
                var data = [];
                var columns = [
                    { id: "SrNo", name: "SrNo", field: "SrNo", resizable: false, minWidth: 150, sortable: true },
                    { id: "Chapter", name: "Chapter", field: "Chapter", resizable: false, minWidth: 150, sortable: true },
                    { id: "SSRItemNo", name: "SSRItemNo", field: "SSRItemNo", resizable: false, minWidth: 120, sortable: true },
                    { id: "DescriptionOfTheItem", name: "DescriptionOfTheItem", field: "DescriptionOfTheItem", resizable: false, minWidth: 120, sortable: true },
                    { id: "AdditionalSpecification", name: "AdditionalSpecification", field: "AdditionalSpecification", resizable: false, minWidth: 100, sortable: true },
                    { id: "Unit", name: "Unit", field: "Unit", resizable: false, minWidth: 120, sortable: true },
                    { id: "CompletedRateExcludingGSTInRs", name: "CompletedRateExcludingGSTInRs", field: "CompletedRateExcludingGSTInRs", resizable: false, minWidth: 120, sortable: true },
                    { id: "LabourRateExcludingGSTInRs", name: "LabourRateExcludingGSTInRs", field: "LabourRateExcludingGSTInRs", resizable: false, minWidth: 120, sortable: true },

                ];
                var options = {
                    editable: false,
                    enableAddRow: false,
                    enableCellNavigation: true,
                    multiColumnSort: true
                };
                var percentCompleteThreshold = 0;
                var prevPercentCompleteThreshold = 0;
                var h_runfilters = null;

               

                $(function () {
                    dataView = new Slick.Data.DataView({ inlineFilters: true });
                    grid = new Slick.Grid("#BillingGrid", dataView, columns, options);
                    var pager = new Slick.Controls.Pager(dataView, grid, $("#pager"));
                    // wire up model events to drive the grid
                    dataView.onRowCountChanged.subscribe(function (e, args) {
                        grid.updateRowCount();
                        grid.render();
                    });
                    dataView.onRowsChanged.subscribe(function (e, args) {
                        grid.invalidateRows(args.rows);
                        grid.render();
                    });
                  
                    function filterAndUpdate() {
                        var isNarrowing = percentCompleteThreshold > prevPercentCompleteThreshold;
                        var isExpanding = percentCompleteThreshold < prevPercentCompleteThreshold;
                        var renderedRange = grid.getRenderedRange();
                        dataView.setFilterArgs(percentCompleteThreshold);
                        dataView.setRefreshHints({
                            ignoreDiffsBefore: renderedRange.top,
                            ignoreDiffsAfter: renderedRange.bottom + 1,
                            isFilterNarrowing: isNarrowing,
                            isFilterExpanding: isExpanding
                        });
                        dataView.refresh();
                        prevPercentCompleteThreshold = percentCompleteThreshold;
                    }
                    // initialize the model after all the events have been hooked up
                    dataView.beginUpdate();
                   
                    dataView.setItems(response);
                    dataView.endUpdate();
                })
            },
            error: function (result) {
                toastr.error("ajaxError");
            }
        });
    }



</script>
<style>
    div.slick-header {
        height: 30px;
    }

    div.slick-header-column {
        height: 100% !important;
    }

    span.slick-pager-nav {
        padding: 0px !important;
    }

    span.slick-pager-settings {
        padding: 0px !important;
    }

    #BillingGrid {
        font-size: small !important;
    }
</style>