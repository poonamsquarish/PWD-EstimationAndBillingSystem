<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AdharNo" xml:space="preserve">
    <value>Adhar No</value>
  </data>
  <data name="ajaxError" xml:space="preserve">
    <value>Something went wrong while processing your request. Please try again later.</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="All rights reserved." xml:space="preserve">
    <value>All rights reserved.</value>
  </data>
  <data name="AlreadyExists" xml:space="preserve">
    <value>Already Exists!</value>
  </data>
  <data name="Apr" xml:space="preserve">
    <value>Apr</value>
  </data>
  <data name="Aug" xml:space="preserve">
    <value>Aug</value>
  </data>
  <data name="Bank" xml:space="preserve">
    <value>Bank</value>
  </data>
  <data name="BankAccountNumber" xml:space="preserve">
    <value>Bank Account Number</value>
  </data>
  <data name="Bankbranch" xml:space="preserve">
    <value>Bank branch</value>
  </data>
  <data name="BankDetails" xml:space="preserve">
    <value>Bank Details</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="ContactNo" xml:space="preserve">
    <value>Contact No</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>Created On</value>
  </data>
  <data name="DateValidationError" xml:space="preserve">
    <value>FromDate should be less than ToDate</value>
  </data>
  <data name="Dec" xml:space="preserve">
    <value>Dec</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="DOB" xml:space="preserve">
    <value>Date of Birth</value>
  </data>
  <data name="DOJ" xml:space="preserve">
    <value>Date of Joining</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Excel" xml:space="preserve">
    <value>Excel</value>
  </data>
  <data name="Feb" xml:space="preserve">
    <value>Feb</value>
  </data>
  <data name="filtered from" xml:space="preserve">
    <value>filtered from</value>
  </data>
  <data name="Filters" xml:space="preserve">
    <value>Filters</value>
  </data>
  <data name="FinancialYear" xml:space="preserve">
    <value>Financial Year</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FromDate" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="FromDateShouldBeGreaterThanToDate" xml:space="preserve">
    <value>From Date Should Be Greater Than To Date</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>home</value>
  </data>
  <data name="IFSCCode" xml:space="preserve">
    <value>IFSC Code</value>
  </data>
  <data name="InvalidUserLoginMsg" xml:space="preserve">
    <value>Invalid User. Please enter valid user name and password.</value>
  </data>
  <data name="IsLocked" xml:space="preserve">
    <value>Is Locked</value>
  </data>
  <data name="Jan" xml:space="preserve">
    <value>Jan</value>
  </data>
  <data name="Jul" xml:space="preserve">
    <value>Jul</value>
  </data>
  <data name="Jun" xml:space="preserve">
    <value>Jun</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Mar" xml:space="preserve">
    <value>Mar</value>
  </data>
  <data name="master" xml:space="preserve">
    <value>master</value>
  </data>
  <data name="master list" xml:space="preserve">
    <value>master list</value>
  </data>
  <data name="May" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="new" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="next" xml:space="preserve">
    <value>next</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="No records available" xml:space="preserve">
    <value>No records available</value>
  </data>
  <data name="Nov" xml:space="preserve">
    <value>Nov</value>
  </data>
  <data name="Oct" xml:space="preserve">
    <value>Oct</value>
  </data>
  <data name="of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Overall" xml:space="preserve">
    <value>Overall</value>
  </data>
  <data name="PAN" xml:space="preserve">
    <value>PAN</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PayScale" xml:space="preserve">
    <value>Pay Scale</value>
  </data>
  <data name="PDF" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="Pension" xml:space="preserve">
    <value>Pension</value>
  </data>
  <data name="PensionBasicDetails" xml:space="preserve">
    <value>Pension Basic Details</value>
  </data>
  <data name="PensionDetails" xml:space="preserve">
    <value>Pension Details</value>
  </data>
  <data name="PensionDetailsDeleteSuccessMsg" xml:space="preserve">
    <value>Pension Details is deleted successfully</value>
  </data>
  <data name="PensionDetailsId" xml:space="preserve">
    <value>Pension Details Id</value>
  </data>
  <data name="PensionDetailsId1" xml:space="preserve">
    <value>Pension Details Id1</value>
  </data>
  <data name="PensionDetailSubmitMsg" xml:space="preserve">
    <value>Pension details submitted successfully.</value>
  </data>
  <data name="PensionersName" xml:space="preserve">
    <value>Pensioner's Name</value>
  </data>
  <data name="PensionGenerateSuccess" xml:space="preserve">
    <value>Pension generated successfully</value>
  </data>
  <data name="PensionPay" xml:space="preserve">
    <value>Pension Pay</value>
  </data>
  <data name="PensionSheet" xml:space="preserve">
    <value>Pension Sheet</value>
  </data>
  <data name="PhysicallyHandicapped" xml:space="preserve">
    <value>Physically handicapped</value>
  </data>
  <data name="PleaseSelectDuration" xml:space="preserve">
    <value>Please select duration.</value>
  </data>
  <data name="PleaseSelectFromToDate" xml:space="preserve">
    <value>Please Select From and To Date</value>
  </data>
  <data name="PresentDays" xml:space="preserve">
    <value>Present Days</value>
  </data>
  <data name="previous" xml:space="preserve">
    <value>previous</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Records per page" xml:space="preserve">
    <value>Records per page</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="ReqAllowanceDetails" xml:space="preserve">
    <value>Please enter valid details</value>
  </data>
  <data name="ReqBankDetails" xml:space="preserve">
    <value>Please fill bank details completely or keep all fields as blank</value>
  </data>
  <data name="ReqSignUpDetails" xml:space="preserve">
    <value>Employee details submitted successfully</value>
  </data>
  <data name="RequiredMessage" xml:space="preserve">
    <value>Please enter required fields</value>
  </data>
  <data name="Retirement" xml:space="preserve">
    <value>Retirement</value>
  </data>
  <data name="RetirementDate" xml:space="preserve">
    <value>Retirement Date</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Rs" xml:space="preserve">
    <value>Rs</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search all columns" xml:space="preserve">
    <value>Search all columns</value>
  </data>
  <data name="SearchText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectBank" xml:space="preserve">
    <value>Select Bank</value>
  </data>
  <data name="SelectMonth" xml:space="preserve">
    <value>Select Month</value>
  </data>
  <data name="SelectReasonforInactive" xml:space="preserve">
    <value>Select Reason for Inactive</value>
  </data>
  <data name="SelectYear" xml:space="preserve">
    <value>Select Year</value>
  </data>
  <data name="Sep" xml:space="preserve">
    <value>Sep</value>
  </data>
  <data name="SerNo" xml:space="preserve">
    <value>Serial No.</value>
  </data>
  <data name="Showing page" xml:space="preserve">
    <value>Showing page</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="SignUpDetails" xml:space="preserve">
    <value>Sign Up Details</value>
  </data>
  <data name="Squarish Technology" xml:space="preserve">
    <value>Squarish Technology</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="ToDate" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="total records" xml:space="preserve">
    <value>total records</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="ValidEmailMsg" xml:space="preserve">
    <value>Please enter valid email address.</value>
  </data>
  <data name="ValidPasswordMsg" xml:space="preserve">
    <value>Password at least one number, one lowercase and one uppercase letter and at least six characters.</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="WelComeMsg" xml:space="preserve">
    <value>Welcome  to</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>